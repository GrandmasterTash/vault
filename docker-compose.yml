version: '3.7'

services:

  mongo:
    image: 'mongo:4.4.6'
    container_name: 'mongo'
    ports:
      - '27017:27017'
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: changeme
    networks:
      - docker_net

  # UI available on http://localhost:16686/
  jaeger:
    image: 'jaegertracing/all-in-one:1.24.0'
    container_name: "jaeger"
    networks:
      - docker_net
    ports:
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "16686:16686"
      - "14268:14268"

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: "zookeeper"
    tmpfs: "/tmp/datalog"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
    networks:
      - docker_net

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: "kafka"
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    networks:
      - docker_net
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"

# TODO: Consider this https://github.com/fede1024/kafka-view

networks:
  docker_net:
